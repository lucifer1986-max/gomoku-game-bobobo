name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SKIP_JDK_VERSION_CHECK: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Verify Node.js version
      run: |
        echo "=== Node.js Environment ==="
        node --version
        npm --version
        echo "Node.js path: $(which node)"
        echo "npm path: $(which npm)"
        echo "Current directory: $(pwd)"
        echo "=========================="
        
    - name: Setup Java JDK
      id: setup-java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Verify Java Installation
      run: |
        echo "=== Java Environment ==="
        java -version
        javac -version
        echo "JAVA_HOME: $JAVA_HOME"
        echo "PATH: $PATH"
        echo "=========================="

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      env:
        SKIP_JDK_VERSION_CHECK: true
      
    - name: Clear npm cache
      run: npm cache clean --force

    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm ci
        echo "Dependencies installed successfully"
      
    - name: Build web app
      run: npm run build
      
    - name: Verify Capacitor CLI version
      run: |
        echo "=== Capacitor Environment ==="
        npx @capacitor/cli --version
        echo "Capacitor config:"
        cat capacitor.config.ts
        echo "Project structure:"
        ls -la
        echo "=========================="

    - name: Clean Android project
      run: |
        echo "Cleaning Android project..."
        cd android
        chmod +x ./gradlew
        ./gradlew clean
        cd ..

    - name: Sync Capacitor
      run: |
        echo "Syncing Capacitor with Android platform..."
        npx cap sync android
      
    - name: Build Android APK
      run: |
        echo "=== Android Build Process ==="
        echo "Current directory: $(pwd)"
        echo "Android directory contents:"
        ls -la android/
        echo "Checking gradlew file:"
        ls -la android/gradlew
        echo "Building Android APK..."
        cd android
        chmod +x ./gradlew
        echo "Gradle version:"
        ./gradlew --version
        echo "Starting APK build..."
        ./gradlew assembleDebug --no-daemon --stacktrace --warning-mode all
        echo "Checking build output:"
        ls -la app/build/outputs/apk/debug/
        echo "APK build completed successfully!"
        echo "=========================="
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: gomoku-game-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: 五子棋游戏 v${{ github.run_number }}
        body: |
          ## 🎮 五子棋游戏 Android APK
          
          ### 功能特性：
          - 🎯 双人对战模式
          - 🤖 人机对战模式（3个难度级别）
          - 🎨 精美UI设计
          - 📱 移动端优化
          
          ### 安装说明：
          1. 下载下方的APK文件
          2. 在Android设备上启用"未知来源"安装
          3. 安装并享受游戏！
          
          构建时间: ${{ github.event.head_commit.timestamp }}
          提交: ${{ github.sha }}
        files: android/app/build/outputs/apk/debug/app-debug.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
